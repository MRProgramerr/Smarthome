#ifndef SPRINKLERSYSTEMPROXYINTERFACE_H
#define SPRINKLERSYSTEMPROXYINTERFACE_H

#include "proxyinterface.h"
#include <QObject>
#include "measurementtemplate.h"

class SprinklerSystemProxyInterface : public ProxyInterface
{
public:
    virtual ~SprinklerSystemProxyInterface(){};

    virtual int getUpdateFrequency() ;
    void setUpdateFrequency(int value);

    double getWaterConsumptionPerInterval() ;
    void setWaterConsumptionPerInterval(double value);
    
    double getlifetimeConsumption();
    void setlifetimeConsumption(double value);
    
    bool getIsOn() ;
    void turnOn();

    void turnOff();

    void schedule(QTime delay, QTime duration);
    
    void setcurrrentState(std::string state);
    std::vector<MeasurementTemplate<QTime>*> currentState();
    std::vector<MeasurementTemplate<double>*> waterUsage();
};

#endif // SPRINKLERSYSTEMPROXYINTERFACE_H
